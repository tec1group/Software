;Sound and Music Routine. 
;------------------------

; Based on Mon1 routine by J. Hardy and modified to work at 4Mhz
; By B. Chiha

; This routine will play a series of notes based on data in memory
; To play a note use a reference between 01H and 18H.  Where
; 01H is the lowest and 18h is the highest.  Use 00H to make a pause
; and any value greater then 18H to exit.
;
; Note reference table is as follows:
; +-----------+
; |  G  | 01H |
; |  G# | 02H |     Exit = 1FH
; |  A  | 03H |
; |  A# | 04H |
; |  B  | 05H |
; |  C  | 06H |
; |  C# | 07H |
; |  D  | 08H |
; |  D# | 09H |
; |  E  | 0AH |
; |  F  | 0BH |
; |  F# | 0CH |
; |  G  | 0DH |
; |  G# | 0EH |
; |  A  | 0FH |
; |  A# | 10H |
; |  B  | 11H |
; |  C  | 12H |
; |  C# | 13H |
; |  D  | 14H |
; |  D# | 15H |
; |  E  | 16H |
; |  F  | 17H |
; |  F# | 18H |
; +-----------+


playTuneMenu:
        ld hl,tuneParams    ;get tune parameters
        call paramDriver    ;collect parameters
        ld de,(DATA_FROM)   ;get start address
playTune:
        ld a,(de)           ;put note index in A
        inc de              ;move to next note
        cp 19H              ;is it of of range?
        ret nc              ;exit if it is
        or a                ;is it a pause?
        jr z,tunePause      ;yes, do a pause
        ld hl,FREQ_TABLE    ;load HL with frequency table
        dec a               ;fix indexing
        add a,a             ;double A
        add a,l             ;index HL
        ld l,a              ;and
        ld a,0              ;ensure
        adc a,h             ;H is set
        ld h,a              ;correctly
        ld a,(hl)           ;get wavelength
        push bc             ;save BC
        ld b,a
        inc hl
        ld a,(hl)           ;get frequency
        ld l,a              ;set HL = A
        ld h,0
        call playNote       ;play the tone
        pop bc              ;restore BC
        jr playTune         ;play next note
tunePause:
        push hl             ;save HL
        ld hl,2000h         ;some time delay
        push de             ;save DE
        ld de,1             ;load DE with 1
        sbc hl,de           ;subtract 1 from HL
        jp nc,$-2           ;repeat subtraction until HL=0
        pop de              ;restore DE
        pop hl              ;restore HL
        jr playTune         ;play next note

; Play a note.  Play a note with a given frequency and wavelength
; Input: HL = frequency (01-7F)
;        B = wavelength (00-FF)
; Destroys: HL, BC, A
playNote:
        add hl,hl           ;double HL
        add hl,hl           ;double again for 4Mhz
        xor a               ;clear A
        push de             ;save DE
        ld de,1             ;set DE=1
        ld c,b              ;save wavelength
noteLoop:
        out (DIGITS),a      ;toggle speaker bit
        ld b,3              ;elongate wavelength
        push bc             ;save BC
        ld b,c              ;get wavelength
        djnz $              ;loop for wavelength
        pop bc              ;restore BC
        djnz $-5            ;loop 3 times
        xor 80H             ;invert bit 7 of A (speaker bit)
        sbc hl,de           ;HL = HL - 1
        jr nz,noteLoop      ;repeat for frequency
        pop de              ;restore DE
        xor a               ;clear a
        out (DIGITS),a      ;clear speaker bit
        ret

; frequency table, contains wavelength and frequency combined sequentially
FREQ_TABLE:
        .db 8CH,19H,83H,1AH,7CH,1CH,75H,1DH
        .db 70H,1EH,67H,20H,62H,23H,5CH,25H
        .db 57H,27H,52H,29H,4EH,2CH,48H,2EH
        .db 45H,31H,41H,33H,3CH,37H,39H,3AH
        .db 36H,3DH,32H,41H,2FH,45H,2CH,49H
        .db 2AH,4DH,27H,52H,25H,57H,23H,5CH

tuneParams:        
        .db 1                           ;Three parameters
        .db "TUNE  "                    ;7seg text
        .db "= Enter Parameters =",0    ;Parameter title
        .db "Start Address:",0          ;Text and Address
        .dw DATA_FROM
