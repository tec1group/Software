0000                             ; Conway's Game of Life
0000                             ; ---------------------
0000                             ; 
0000                             ; Written by Brian Chiha -- July 2020
0000                             ; 
0000                             ; Game of Life is a cellular automation simulation.  Each cell evolves based on the number
0000                             ; of cells that surround it.  The basic cell rules are:
0000                             ; 
0000                             ;    * Any live cell with two or three live neighbours survives.
0000                             ;    * Any dead cell with three live neighbours becomes a live cell.
0000                             ;    * All other live cells die in the next generation. Similarly, all other dead cells stay dead.
0000                             ; 
0000                             ; The simulation is written for the TEC using the 8x8 LED matrix.
0000                             ; 
0000                             ; Setup
0000                             ; -----
0000                             ; 
0000                             ; To be run on the TEC-1D with any Monitor.  For the keyboard to work
0000                             ; it requires EITHER a 4k7 resistor between the NMI (pin 17 on Z-80) and D6 (pin
0000                             ; 10 on the Z-80) OR the DAT (LCD) expanstion board fitted to port 3.  The
0000                             ; current TEC-1D boards have the JMON MOD resitor connection already there.
0000                             ; The 8x8 LED board is fitted to ports 5 and 6 with the port select strobe of the
0000                             ; left hand latch going to port 6.
0000                             ; 
0000                             ; To Use
0000                             ; ------
0000                             ; 
0000                             ; Press "GO" to start with a random cell placement.
0000                             ; Press "+" or "-" to cycle through pre defined cell placement.
0000                             ; Press the above keys at anytime to restart a simulation.
0000                             ; 
0000                             ; Enjoy life taking on its own.....
0000                             ; 
0000                             ; The 8x8 cells are structured using 64 bytes, where each memory location is a live cell EG:
0000                             ;  CURMAT:
0000                             ;  0x0D10      1 0 1 1 1 0 1 1  = BB
0000                             ;  0x0D18      0 1 0 0 1 1 0 0  = 4C
0000                             ;  0x0D20      1 1 1 0 0 0 1 0  = E2
0000                             ;  0x0D28      0 1 0 1 1 0 1 0  = 5A
0000                             ;  0x0D30      1 0 1 1 1 0 1 1  = BB
0000                             ;  0x0D38      0 1 0 0 1 1 0 0  = 4C
0000                             ;  0x0D40      1 1 1 0 0 0 1 0  = E2
0000                             ;  0x0D48      0 1 0 1 1 0 1 0  = 5A
0000                             ; 
0000                             ; Cells are then printed vertically from left to right like so:
0000                             ;              1  0  1  0  1  0  1  0
0000                             ;              0  1  1  1  0  1  1  1
0000                             ;              1  0  1  0  1  0  1  0
0000                             ;              1  0  0  1  1  0  0  1
0000                             ;              1  1  0  1  1  1  0  1
0000                             ;              0  1  0  0  0  1  0  0
0000                             ;              1  0  1  1  1  0  1  1
0000                             ;              1  0  0  0  1  0  0  0
0000                             ; SCREEN:      BB 4C E2 5A BB 4C E2 5A
0000                             ; 
0000                             ; Development Notes:
0000                             ; To make adding up the surrounding cells easier, I put an upper and lower zero buffer on either end
0000                             ; of the matrix.  This handles up and down checks.  For side checks, I see if the current cell is
0000                             ; on the left or right edge. If on the edge, I just ignore the cell.
0000                SCREEN:   EQU   5000H   ;Game Screen                                           (8-bytes)
0000                UPBUFF:   EQU   5008H   ;Zero row for up checks                                (8-bytes)
0000                CURMAT:   EQU   5010H   ;Current Cell Matrix, 8 bytes x 8 bytes                (64-bytes)
0000                DNBUFF:   EQU   5050H   ;Zero row for down checks                              (8-bytes)
0000                NEXMAT:   EQU   5058H   ;Next Interation Cell Matrix, 8 bytes x 8 bytes        (64-bytes)
0000                DATALC:   EQU   5100H   ;Data location for pre-defined examples                (160-bytes)
4000                          .ORG   4000H   
4000                START:       
4000                             ;Copy Data to 0x0A00
4000   21 11 41               LD   HL,DSPTBL   
4003   11 00 51               LD   DE,DATALC   
4006   01 98 00               LD   BC,0098H   
4009   ED B0                  LDIR      
400B                             ;Blank Buffs and Current Matrix
400B   CD DF 40               CALL   CLEAR   
400E                             ;Fill Current Matrix with Random cells for first iteration
400E   CD C4 40               CALL   RANFIL   
4011                             ;Game Loop
4011                GAME:        
4011   CD 78 40               CALL   KEYHIT   ; Check if a Key was pressed and action it
4014   CD AA 40               CALL   MATSCR   ; Convert the Matrix to Screen
4017   CD F0 40               CALL   SCAN   ; Display the current Screen
401A                             ;Update the matrix with Conway Rules
401A   DD 21 10 50            LD   IX,CURMAT   
401E   21 58 50               LD   HL,NEXMAT   
4021   06 40                  LD   B,40H   ; 64 cells
4023                CELLS:       
4023   AF                     XOR   A   ; Cell Counter
4024                             ;Look up
4024   DD 86 F8               ADD   A,(IX-08H)   ; Minus 8
4027                             ;Look down
4027   DD 86 08               ADD   A,(IX+08H)   ; Plus 8
402A                CHECKLT:      ;Check if on left edge
402A   4F                     LD   C,A   ; Save A (Counter)
402B   DD E5                  PUSH   IX   
402D   D1                     POP   DE   
402E   7B                     LD   A,E   
402F                             ;            LD      A,IXL
402F   E6 07                  AND   07H   ; On a wall
4031   79                     LD   A,C   ; Restore A (Counter)
4032   28 15                  JR   Z,CELLRT   ; On edge, skip left cells
4034                CELLLT:      
4034                             ;Look upper left
4034   DD 86 F7               ADD   A,(IX-09H)   ; Minus 9
4037                             ;Look left
4037   DD 86 FF               ADD   A,(IX-01H)   ; Minus 1
403A                             ;Look lower left
403A   DD 86 07               ADD   A,(IX+07H)   ; Plus 7
403D                CHECKRT:      ;Check if on right edge
403D   4F                     LD   C,A   ; Save A (Counter)
403E   DD E5                  PUSH   IX   
4040   D1                     POP   DE   
4041   7B                     LD   A,E   
4042                             ;            LD      A,IXL
4042   E6 07                  AND   07H   ; On a wall
4044   FE 07                  CP   07H   
4046   79                     LD   A,C   ; Restore A (Counter)
4047   28 09                  JR   Z,EVAL   ; On edge, skip right cells
4049                CELLRT:      
4049                             ;Look upper right
4049   DD 86 F9               ADD   A,(IX-07H)   ; Minus 7
404C                             ;Look right
404C   DD 86 01               ADD   A,(IX+01H)   ; Plus 1
404F                             ;Look lower right
404F   DD 86 09               ADD   A,(IX+09H)   ; Plus 9
4052                EVAL:        ;Evaluate surrounding cell count to create or destroy current cell
4052   0E 01                  LD   C,01H   ; Alive
4054   FE 03                  CP   03H   ; Check if 3 cells around
4056   28 0C                  JR   Z,STOREC   
4058   0E 00                  LD   C,00H   ; Dead
405A   FE 02                  CP   02H   ; Check if 2 cells around
405C   20 06                  JR   NZ,STOREC   
405E   DD 7E 00               LD   A,(IX+0)   ; Current Cell
4061   E6 01                  AND   01H   ; Keep it alive if already alive.
4063   4F                     LD   C,A   
4064                STOREC:      
4064   79                     LD   A,C   ; C stores cell evaluation
4065   77                     LD   (HL),A   ; Update cell on Next Matric
4066   23                     INC   HL   
4067   DD 23                  INC   IX   
4069   10 B8                  DJNZ   CELLS   
406B                             ;Move next matrix to current
406B   21 58 50               LD   HL,NEXMAT   
406E   11 10 50               LD   DE,CURMAT   
4071   01 40 00               LD   BC,0040H   
4074   ED B0                  LDIR      
4076   18 99                  JR   GAME   
4078                             ;Keyboard Check
4078                KEYHIT:      
4078   DB 03                  IN   A,(03)   ;Check if key is pressed
407A   CB 77                  BIT   6,A   
407C   C0                     RET   NZ   ;No key pressed
407D   DB 00                  IN   A,(00)   ;Get actual key
407F   E6 1F                  AND   1FH   ;Mask upper bits
4081   5F                     LD   E,A   
4082   AF                     XOR   A   ;Clear flags
4083   7B                     LD   A,E   
4084   B7                     OR   A   ;Check for zero (random option)
4085   20 04                  JR   NZ,PREDEF   
4087   CD C4 40               CALL   RANFIL   
408A   C9                     RET      
408B                PREDEF:      
408B   3D                     DEC   A   ;Start at index 0
408C   87                     ADD   A,A   ;2 bytes index
408D   87                     ADD   A,A   ;4 bytes index
408E   87                     ADD   A,A   ;8 bytes index
408F   21 00 51               LD   HL,DATALC   ;Display Table
4092   6F                     LD   L,A   ;Index it
4093   11 10 50               LD   DE,CURMAT   ;Current Matrix
4096                             ;Based on the load a pre-defined cells to the Matrix, Uses A for index
4096   06 08                  LD   B,08H   
4098                L1:          
4098   7E                     LD   A,(HL)   
4099   C5                     PUSH   BC   
409A   4F                     LD   C,A   
409B   06 08                  LD   B,08H   
409D                L2:          
409D   AF                     XOR   A   
409E   CB 01                  RLC   C   
40A0   8F                     ADC   A,A   
40A1   12                     LD   (DE),A   
40A2   13                     INC   DE   
40A3   10 F8                  DJNZ   L2   
40A5   23                     INC   HL   
40A6   C1                     POP   BC   
40A7   10 EF                  DJNZ   L1   
40A9   C9                     RET      
40AA                             ;Convert Matrix to screen.  Convert each row to bits in byte.  Save to screen
40AA                MATSCR:      
40AA   21 10 50               LD   HL,CURMAT   
40AD   11 00 50               LD   DE,SCREEN   
40B0   06 08                  LD   B,08H   
40B2                M1:          
40B2   C5                     PUSH   BC   
40B3   01 00 08               LD   BC,0800H   
40B6                M2:          
40B6   7E                     LD   A,(HL)   
40B7   81                     ADD   A,C   
40B8   07                     RLCA      
40B9   4F                     LD   C,A   
40BA   23                     INC   HL   
40BB   10 F9                  DJNZ   M2   
40BD   0F                     RRCA      
40BE   12                     LD   (DE),A   
40BF   1C                     INC   E   
40C0   C1                     POP   BC   
40C1   10 EF                  DJNZ   M1   
40C3   C9                     RET      
40C4                             ;Fill the Current Matrix with random cells (live or dead)
40C4                RANFIL:      
40C4   21 10 50               LD   HL,CURMAT   
40C7   06 40                  LD   B,40H   ;Eight rows of eight bytes
40C9                RF1:         
40C9   C5                     PUSH   BC   
40CA   ED 5F                  LD   A,R   ;Random Number Generation
40CC   47                     LD   B,A   
40CD   0F                     RRCA      ;Multiply by 32
40CE   0F                     RRCA      
40CF   0F                     RRCA      
40D0   EE 1F                  XOR   1FH   
40D2   80                     ADD   A,B   
40D3   DE FF                  SBC   A,0FFH   
40D5   C1                     POP   BC   
40D6   0F                     RRCA      ;Check bit 0 if set then make live
40D7   3E 00                  LD   A,00H   
40D9   8F                     ADC   A,A   ;Just add the carry flag
40DA   77                     LD   (HL),A   
40DB   23                     INC   HL   
40DC   10 EB                  DJNZ   RF1   
40DE   C9                     RET      
40DF                             ; Blank out Matrix
40DF                CLEAR:       
40DF   21 08 50               LD   HL,UPBUFF   
40E2   11 09 50               LD   DE,UPBUFF+1   
40E5   AF                     XOR   A   
40E6   77                     LD   (HL),A   
40E7   01 4F 00               LD   BC,NEXMAT-UPBUFF-1   
40EA   ED B0                  LDIR      
40EC   32 10 50               LD   (CURMAT),A   
40EF   C9                     RET      
40F0                             ; Multiplex the 8x8 Display
40F0                SCAN:        
40F0   E5                     PUSH   HL   
40F1   06 80                  LD   B,80H   ;Wait on Scan
40F3                S81:         
40F3   C5                     PUSH   BC   
40F4   06 01                  LD   B,01H   ;Counter for 8x8
40F6   21 00 50               LD   HL,SCREEN   
40F9                S82:         
40F9   7E                     LD   A,(HL)   
40FA   D3 06                  OUT   (06),A   
40FC   78                     LD   A,B   
40FD   D3 05                  OUT   (05),A   
40FF   06 80                  LD   B,80H   
4101   10 FE        S83:      DJNZ   S83   
4103   23                     INC   HL   
4104   47                     LD   B,A   
4105   AF                     XOR   A   
4106   D3 05                  OUT   (05),A   
4108   CB 00                  RLC   B   
410A   30 ED                  JR   NC,S82   
410C   C1                     POP   BC   
410D   10 E4                  DJNZ   S81   
410F   E1                     POP   HL   
4110   C9                     RET      
4111                             ; Dipslay Table.  16 Predefined shapes, stored as in 8 byte screen format
4111                             ;            ORG     0A00H    ;This address is important, lower byte must be 00
4111   00 E7 00 00 00 00 E7 00 DSPTBL:   DB   00H,0E7H,00H,00H,00H,00H,0E7H,00H   ;Blinkers
4119   00 07 0E 00 00 70 E0 00 DB   00H,07H,0EH,00H,00H,70H,0E0H,00H   ;Toad
4121   C0 C0 0C 0C 30 30 03 03 DB   0C0H,0C0H,0CH,0CH,30H,30H,03H,03H   ;Beacon
4129   00 04 04 06 00 73 15 06 DB   00H,04H,04H,06H,00H,73H,15H,06H   ;Pulsar
4131   20 A0 60 00 00 00 00 00 DB   20H,0A0H,60H,00H,00H,00H,00H,00H   ;Glider
4139   08 2A 08 6B 08 14 08 00 DB   08H,2AH,08H,6BH,08H,14H,08H,00H   ;Why Not
4141   10 28 58 A6 65 1A 14 08 DB   10H,28H,58H,0A6H,65H,1AH,14H,08H   ;Boat
4149   C0 80 50 00 14 00 05 03 DB   0C0H,80H,50H,00H,14H,00H,05H,03H   ;Barbers Pole
4151   00 08 18 00 72 15 09 06 DB   00H,08H,18H,00H,72H,15H,09H,06H   ;Drummer
4159   00 00 00 30 18 10 00 00 DB   00H,00H,00H,30H,18H,10H,00H,00H   ;R-pentomino
4161   00 00 77 08 63 08 77 00 DB   00H,00H,77H,08H,63H,08H,77H,00H   ;Carnival
4169   00 08 18 38 18 08 00 00 DB   00H,08H,18H,38H,18H,08H,00H,00H   ;Arrow
4171   00 00 00 1C 14 1C 00 00 DB   00H,00H,00H,1CH,14H,1CH,00H,00H   ;Square
4179   00 A0 20 A0 00 00 00 00 DB   00H,0A0H,20H,0A0H,00H,00H,00H,00H   ;Face to Pulsar
4181   03 19 36 30 30 36 19 03 DB   03H,19H,36H,30H,30H,36H,19H,03H   ;Fumarole
4189   08 28 02 C0 03 40 14 10 DB   08H,28H,02H,0C0H,03H,40H,14H,10H   ;Phoenix
4191   00 62 95 89 A1 81 42 3C DB   00H,62H,95H,89H,0A1H,81H,42H,3CH   ;Pacman
4199   18 24 42 81 81 42 24 18 DB   18H,24H,42H,81H,81H,42H,24H,18H   ;Octagon
41A1   38 44 82 41 41 82 44 38 DB   38H,44H,82H,41H,41H,82H,44H,38H   ;Heart


SCREEN:             5000 DEFINED AT LINE 62
                    > USED AT LINE 206
                    > USED AT LINE 266
UPBUFF:             5008 DEFINED AT LINE 63
                    > USED AT LINE 250
                    > USED AT LINE 251
                    > USED AT LINE 254
CURMAT:             5010 DEFINED AT LINE 64
                    > USED AT LINE 90
                    > USED AT LINE 156
                    > USED AT LINE 183
                    > USED AT LINE 205
                    > USED AT LINE 227
                    > USED AT LINE 256
DNBUFF:             5050 DEFINED AT LINE 65
NEXMAT:             5058 DEFINED AT LINE 66
                    > USED AT LINE 91
                    > USED AT LINE 155
                    > USED AT LINE 254
DATALC:             5100 DEFINED AT LINE 67
                    > USED AT LINE 73
                    > USED AT LINE 181
START:              4000 DEFINED AT LINE 70
GAME:               4011 DEFINED AT LINE 84
                    > USED AT LINE 160
CELLS:              4023 DEFINED AT LINE 93
                    > USED AT LINE 152
CHECKLT:            402A DEFINED AT LINE 100
CELLLT:             4034 DEFINED AT LINE 109
CHECKRT:            403D DEFINED AT LINE 117
CELLRT:             4049 DEFINED AT LINE 127
                    > USED AT LINE 108
EVAL:               4052 DEFINED AT LINE 135
                    > USED AT LINE 126
STOREC:             4064 DEFINED AT LINE 145
                    > USED AT LINE 138
                    > USED AT LINE 141
KEYHIT:             4078 DEFINED AT LINE 163
                    > USED AT LINE 85
PREDEF:             408B DEFINED AT LINE 176
                    > USED AT LINE 173
L1:                 4098 DEFINED AT LINE 186
                    > USED AT LINE 200
L2:                 409D DEFINED AT LINE 191
                    > USED AT LINE 197
MATSCR:             40AA DEFINED AT LINE 204
                    > USED AT LINE 86
M1:                 40B2 DEFINED AT LINE 208
                    > USED AT LINE 222
M2:                 40B6 DEFINED AT LINE 211
                    > USED AT LINE 217
RANFIL:             40C4 DEFINED AT LINE 226
                    > USED AT LINE 81
                    > USED AT LINE 174
RF1:                40C9 DEFINED AT LINE 229
                    > USED AT LINE 245
CLEAR:              40DF DEFINED AT LINE 249
                    > USED AT LINE 78
SCAN:               40F0 DEFINED AT LINE 260
                    > USED AT LINE 87
S81:                40F3 DEFINED AT LINE 263
                    > USED AT LINE 281
S82:                40F9 DEFINED AT LINE 267
                    > USED AT LINE 279
S83:                4101 DEFINED AT LINE 273
                    > USED AT LINE 273
DSPTBL:             4111 DEFINED AT LINE 287
                    > USED AT LINE 72
