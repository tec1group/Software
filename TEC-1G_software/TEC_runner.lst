0000                             ; TEC Runner
0000                             ; ----------
0000                             ; 
0000                             ; Written by Brian Chiha
0000                             ; brian.chiha@gmail.com  -- October 2020
0000                             ; 
0000                             ; TEC Runner is an LCD game for the Talking Electronics Z80 Computer.  The game consists of
0000                             ; moving obsticles that the player needs to jump over.  To Jump, press the "4" key.  The player
0000                             ; jumps off the obsticles automatially and lands on the ground.  The obsticles moves faster every
0000                             ; time the player jumps.  See how long you can last.
0000                             ; 
0000                             ; Setup
0000                             ; -----
0000                             ; 
0000                             ; To be run using a TEC-1D with any Monitor and an LCD screen installed.  The LCD is to be
0000                             ; connected to port 04 with control/data pins connected based off the DAT (Data and Tape) Board.
0000                             ; For the keyboard to work it requires EITHER a 4k7 resistor between the NMI (pin 17 on Z-80)
0000                             ; and D6 (pin 10 on the Z-80) OR the DAT (LCD) expanstion board fitted to port 3.  The
0000                             ; current TEC-1D boards have the JMON MOD resitor connection already there.
0000                             ; 
0000                             ; To Use
0000                             ; ------
0000                             ; 
0000                             ; Press "4" to make the player jump before hitting a moving obsticle.  Too slow and you lose!
0000                             ; 
0000                             ;Port 4 on TEC is connected to LCD Enable
0000                             ;A7 is connected to  Register select.  A7=0 for Instruction, A7=1 for Data
0000                LCD_IR:   EQU   00000100B   ;LCD Instruction Register (Port 4)
0000                LCD_DR:   EQU   10000100B   ;A7 is Data Register (Port 4 & A7)
0000                LCDRW1:   EQU   8000H   ;Row 1 First Character Position 80H
0000                LCDRW2:   EQU   0C000H   ;Row 2 First Character Position C0H
0000                LCDDIS:   EQU   8FH   ;LCD Starting position for distance
0000                LCDHEA:   EQU   81H   ;LCD position for head in Mid Jump
0000                SCREEN:   EQU   3000H   ;Game Screen Data 20 bytes ROW 1, 20 bytes ROW 2 (40-bytes)
0000                SCRNR1:   EQU   SCREEN   ;Screen ROW 1 start
0000                SCRNR2:   EQU   SCREEN+14H   ;Screen ROW 2 start
0000                MANRW1:   EQU   SCREEN+01H   ;Position of man on screen ROW 1
0000                MANRW2:   EQU   SCREEN+15H   ;Position of man on screen ROW 2
0000                TERLEN:   EQU   3028H   ;Terrain or Space Length                         (1-byte)
0000                TERPOS:   EQU   3029H   ;Terrain Position either 1=Lower Row or 0=Upper Row (1-byte)
0000                TERTYP:   EQU   302AH   ;Terrain Type either 0=Space or 1=Ground         (1-byte)
0000                MANSTA:   EQU   302BH   ;Running man state B2 = Man Pos, B1 = Jumping, B0 = Run/Jump pose (1-byte)
0000                DISH2D:   EQU   302CH   ;Distance travelled in Decimal.                  (2-bytes)
0000                DELSPD:   EQU   302EH   ;Speed for the scrolling Delay                   (1-byte)
0000                API_BEEP:   EQU   0x03   ;Mon3 Beep
0000                THIS:     EQU   3EH   
0000                CODE:     EQU   3018H   
0000                OF:       EQU   3A07H   
0000                SECRET:   EQU   00H   ;Shhh, Don't set Secret to 1..... ;)
0000                IS:       EQU   04FEH   
0000                BIT:      EQU   28B7H   
0000                TRICKY:   EQU   0828H   
0000                             ;LCD CGROM Shortcuts
0000                CH_SPAC:   EQU   20H   ;" "
0000                CH_RUN1:   EQU   00H   ;Run Position 1
0000                CH_RUN2:   EQU   01H   ;Run Position 2
0000                CH_JMP1:   EQU   02H   ;Jump Lower
0000                CH_JMP2:   EQU   03H   ;Jump Mid
0000                CH_HEAD:   EQU   2EH   ;"."
0000                CH_GRNR:   EQU   04H   ;Ground Right
0000                CH_GRND:   EQU   05H   ;Ground
0000                CH_GRNL:   EQU   06H   ;Ground Left
4000                          .ORG   4000H   ;Start at 0A00 to suit JMON if using it
4000                START:       
4000   CD A0 41               CALL   LCDSET   ;Set up LCD
4003   CD DF 41               CALL   CUSTCH   ;Load the CGRAM custom characters
4006   AF                     XOR   A   
4007   32 09 41               LD   (CHEAT+1),A   
400A                             ; Display Title Screen until GO pressed
400A                TITLE:       
400A   CD D0 41               CALL   RESET   ;Reset the Screen
400D                             ; Fill Bottom Row with Text
400D   21 5E 42               LD   HL,TITTBL   ;Title Table
4010   11 14 30               LD   DE,SCRNR2   ;Destination
4013   01 14 00               LD   BC,14H   ;40 Bytes
4016   ED B0                  LDIR      
4018                             ; Man Running Loop
4018   06 14                  LD   B,14H   ;Twenty Characters
401A                TI1:         
401A   11 00 30               LD   DE,SCREEN   ;Screen Index
401D   7E                     LD   A,(HL)   ;Position
401E   4F                     LD   C,A   ;Save Position
401F   83                     ADD   A,E   ;Index Screen
4020   5F                     LD   E,A   
4021   23                     INC   HL   ;Get Character
4022   7E                     LD   A,(HL)   ;Character
4023   12                     LD   (DE),A   ;Update Screen with character
4024   FE 03                  CP   03H   ;If Man is a Mid Jump
4026   20 07                  JR   NZ,TI2   ;Skip adding Head
4028   7B                     LD   A,E   
4029   D6 14                  SUB   14H   
402B   5F                     LD   E,A   
402C   3E 2E                  LD   A,CH_HEAD   
402E   12                     LD   (DE),A   
402F                TI2:         
402F   23                     INC   HL   ;Go to next character
4030   E5                     PUSH   HL   ;Save HL and BC and DE
4031   D5                     PUSH   DE   
4032   C5                     PUSH   BC   
4033                             ; Title Display Screen Update
4033   21 00 30               LD   HL,SCREEN   
4036   CD 64 41               CALL   UPDLCD   ;Update LCD
4039   CD 02 42               CALL   DELAY   ;Wait a bit for LCD to be seen
403C   C1                     POP   BC   ;Restore HL and BC
403D   D1                     POP   DE   
403E   E1                     POP   HL   
403F                             ; See if GO pressed
403F   CD F4 41               CALL   KEYHIT   ;Look for key
4042   FE 12                  CP   12H   ;Check if GO pressed
4044   28 16                  JR   Z,GOHIT   ;Start game if GO pressed
4046   FE 13                  CP   13H   ;Check if AD pressed
4048   20 05                  JR   NZ,SKIP   
404A   3E 01                  LD   A,1   
404C   32 09 41               LD   (CHEAT+1),A   
404F                SKIP:        
404F                             ;Blank out last character
404F   3E 20                  LD   A,CH_SPAC   
4051   12                     LD   (DE),A   
4052   1E 18                  LD   E,18H   ;Needed to remove body on half jump..ugh..
4054   12                     LD   (DE),A   
4055   1E 23                  LD   E,23H   
4057   12                     LD   (DE),A   
4058   10 C0                  DJNZ   TI1   ;Display Next Man Character
405A                             ; Repeat Title Screen again
405A   18 AE                  JR   TITLE   
405C                GOHIT:       
405C   CD D0 41               CALL   RESET   ;Reset Screen
405F   3E 70                  LD   A,70H   ;Initial Game Speed
4061   32 2E 30               LD   (DELSPD),A   
4064                             ; Main Game Loop
4064                GAME:        
4064                             ; Shift Terrain to the left
4064   CD 83 41               CALL   SCRNSH   ;Shift Terrain to the left and add space to end
4067                             ; Add Next Terrain Type, this could be either space or ground
4067   3A 2A 30               LD   A,(TERTYP)   ;Get current terrain type
406A   47                     LD   B,A   ;Save in B
406B   3A 28 30               LD   A,(TERLEN)   ;Get current terrain length
406E   B7                     OR   A   ;Check if its zero
406F   28 16                  JR   Z,NEWTER   ;Change Terrain type, length and position
4071   3D                     DEC   A   ;Reduce Length by one.
4072   32 28 30               LD   (TERLEN),A   ;Save new length
4075   28 08                  JR   Z,ENDTER   ;If 1 left then End Terrain
4077   78                     LD   A,B   ;Restore terrain type
4078   B7                     OR   A   ;If Zero set it to space
4079   28 26                  JR   Z,SETSPC   ;Set A to space
407B   06 05                  LD   B,CH_GRND   ;Set A to Ground
407D   18 24                  JR   DRAWTE   ;Draw new terrain
407F                ENDTER:      
407F   78                     LD   A,B   ;Restore terrain type
4080   B7                     OR   A   ;If Zero set it to space
4081   28 1E                  JR   Z,SETSPC   ;Set A to space
4083   06 06                  LD   B,CH_GRNL   ;Set A to Ground Left
4085   18 1C                  JR   DRAWTE   
4087                NEWTER:      
4087                             ; Create New Terrain. Alternate between Space and Ground, Set
4087                             ; Random Length and position
4087   21 28 30               LD   HL,TERLEN   ;Get Terrain Length
408A   ED 5F                  LD   A,R   ;Get random value
408C   E6 07                  AND   07H   ;Keep only first 3 bits
408E   C6 03                  ADD   A,03H   ;Add 3 to maintain atleast 3 spaces clear
4090   77                     LD   (HL),A   ;Set Terrain Length (RND)
4091   23                     INC   HL   ;Get Terrain Position
4092   E6 01                  AND   01H   ;Keep only first bit (01 or 00)
4094   77                     LD   (HL),A   ;Set Terrain Position (RND)
4095   23                     INC   HL   ;Get Terrain Type
4096   7E                     LD   A,(HL)   ;Store Terrain type
4097   EE 01                  XOR   01H   ;Flip it
4099   77                     LD   (HL),A   ;Set Terrain Type
409A   B7                     OR   A   ;If Terrain is Ground
409B   28 04                  JR   Z,SETSPC   ;Set A to CH_SPAC
409D   06 04                  LD   B,CH_GRNR   ;Set to new Ground Right
409F   18 02                  JR   DRAWTE   
40A1                SETSPC:      
40A1   06 20                  LD   B,CH_SPAC   ;Set ground to space
40A3                DRAWTE:      
40A3                             ; Draw new Terrain at right hand side of the screen based on
40A3                             ; Terrain Position and B (Terrain Character Type)
40A3   21 13 30               LD   HL,SCREEN+13H   ;Get Screen Index last position
40A6   3A 29 30               LD   A,(TERPOS)   ;Get Row to insert to
40A9   07                     RLCA      
40AA   07                     RLCA      
40AB   07                     RLCA      
40AC   07                     RLCA      
40AD   85                     ADD   A,L   ;Index L wiht Row
40AE   6F                     LD   L,A   ;Save new L
40AF   78                     LD   A,B   ;Get Character to insert
40B0   77                     LD   (HL),A   ;Update screen with new character
40B1                             ;Increase Distance travelled by one
40B1   21 2D 30               LD   HL,DISH2D+1   ;Tens
40B4   7E                     LD   A,(HL)   ;Store Tens in A
40B5   3C                     INC   A   ;Increase by 1
40B6   27                     DAA      ;Convert to Decimal
40B7   77                     LD   (HL),A   ;Store it back
40B8   30 06                  JR   NC,UPDMAN   ;Exit if no overflow
40BA   2B                     DEC   HL   ;Hundreds
40BB   3E 00                  LD   A,00H   
40BD   8E                     ADC   A,(HL)   ;Add Carry to A
40BE   27                     DAA      ;Convert to Decimal
40BF   77                     LD   (HL),A   ;Store it back
40C0                UPDMAN:      
40C0                             ; Display Running Man by Finding which row to display (Bit 2)
40C0   21 15 30               LD   HL,MANRW2   ;Default to lower
40C3   3A 2B 30               LD   A,(MANSTA)   ;Get Man State
40C6                             ; Find Man Position either Lower or Upper.
40C6   FE 04                  CP   04H   ;Check if on upper row
40C8   38 03                  JR   C,UP1   ;On Lower so skip
40CA   21 01 30               LD   HL,MANRW1   ;Set to upper
40CD                UP1:         
40CD                             ; Check to see if Man collides with Ground, if so Game Over
40CD   47                     LD   B,A   ;Save Man State for later
40CE   7E                     LD   A,(HL)   ;See where the Man will be placed
40CF   FE 20                  CP   CH_SPAC   ;If its a Space Character
40D1   20 6C                  JR   NZ,GAMEOV   ;Not a Space, then jump to Game Over
40D3   78                     LD   A,B   ;Restore Man State
40D4                             ; Save Character to screen and display
40D4   47                     LD   B,A   ;Save Man State for later
40D5   E6 03                  AND   00000011B   ;Remove Position bit
40D7   77                     LD   (HL),A   ;Save on screen
40D8                             ; Display Screen
40D8   D9                     EXX      ;Save HL and Man State for Character Removal
40D9   21 00 30               LD   HL,SCREEN   ;Point to Start of Display
40DC   CD 64 41               CALL   UPDLCD   ;Update LCD
40DF                             ; Display Distance
40DF   CD 7D 41               CALL   CHKBSY   ; 
40E2   3E 8F                  LD   A,LCDDIS   ;Move Cursor to Distance output
40E4   D3 04                  OUT   (LCD_IR),A   ;Update LCD with new DRRAM position
40E6   2A 2C 30               LD   HL,(DISH2D)   ;Load HL with Score data
40E9   CD 0E 42               CALL   DE2ASCII   ;Convert HL to ASCII and output it to LCD
40EC   D9                     EXX      ;Restore HL and Man State in B
40ED                             ; Display Head if Man in Mid Jump
40ED   78                     LD   A,B   ;Restore Man State
40EE   FE 03                  CP   03H   ;Is doing a Mid Jump?
40F0   20 0B                  JR   NZ,UP2   ;No then just skip
40F2   3E 81                  LD   A,LCDHEA   ;Yes then set
40F4   D3 04                  OUT   (LCD_IR),A   ;LCD to Head Position
40F6   CD 7D 41               CALL   CHKBSY   ; 
40F9   3E 2E                  LD   A,CH_HEAD   ;Load A with Head (.)
40FB   D3 84                  OUT   (LCD_DR),A   ;Output Head to LCD
40FD                UP2:         
40FD   CD 02 42               CALL   DELAY   ;Don't update too fast
4100   3E 20                  LD   A,CH_SPAC   ;Replace HL with Space (Blank out Man)
4102   77                     LD   (HL),A   ;Save it Screen buffer
4103                             ; Update Man to next state. If running, just toggle BIT 0, If jumping increase state by 1
4103   78                     LD   A,B   ;Restore Man state
4104   FE 02                  CP   02H   ;See if in lower run state
4106   30 1C                  JR   NC,UP5   ;Ignore Key press as already jumping or on upper row
4108                CHEAT:       
4108                             ; Shhhh, something secret
4108   3E 00                  DB   THIS,SECRET   
410A   B7 28 07 3A 18 30 FE 04 28 08 DW   BIT,OF,CODE,IS,TRICKY   
4114                UP3:         
4114                             ; See if Key "+" is pressed
4114   CD F4 41               CALL   KEYHIT   ;Look for key
4117   FE 10                  CP   10H   ;Check if "+" pressed
4119   78                     LD   A,B   ;Restore Man state
411A   20 08                  JR   NZ,UP5   ;Not Pressed so don't jump
411C                UP4:         
411C                             ; Key pressed, decrease delay
411C   21 2E 30               LD   HL,DELSPD   
411F   35                     DEC   (HL)   
4120                             ; Put Man in Jump state
4120   3E 02                  LD   A,02H   ;Set Jump State (Set Bit 1)
4122   18 15                  JR   UP7   ;Save Jumping Man State and Exit
4124                UP5:         
4124   FE 03                  CP   03H   ;On Mid Jump
4126   20 01                  JR   NZ,UP6   ;Just Toggle bit
4128   3C                     INC   A   
4129                UP6:         
4129   EE 01                  XOR   01H   ;Toggle Last Bit
412B                             ; If Man is on upper and no ground under him, drop him
412B   FE 04                  CP   04H   ;Is man on upper and has taken one step...?
412D   20 0A                  JR   NZ,UP7   ;On Lower so skip
412F   47                     LD   B,A   ;Save Man State
4130   3A 15 30               LD   A,(MANRW2)   ;Get Position Under Man
4133   FE 20                  CP   CH_SPAC   ;Space Character
4135   78                     LD   A,B   ;Restore Man
4136   20 01                  JR   NZ,UP7   ;Still on Ground
4138   AF                     XOR   A   ;Drop Man
4139                UP7:         
4139   32 2B 30               LD   (MANSTA),A   ;Save Jumping Man State		
413C   C3 64 40               JP   GAME   ;Loop Back to Game
413F                GAMEOV:      ; Ground has been hit, Flash Screen and wait for any key to restart
413F   3E 70                  LD   A,70H   ;Initial Game Speed
4141   32 2E 30               LD   (DELSPD),A   
4144   06 0C                  LD   B,0CH   ;Screen on LCD instruction
4146                GA1:         
4146   CD 7D 41               CALL   CHKBSY   ;Check for LCD Busy
4149   78                     LD   A,B   ;Display Instruction
414A   EE 04                  XOR   04H   ;Flip Display ON/OFF bit
414C   D3 04                  OUT   (LCD_IR),A   ;Send to Instruction Register (IR)
414E   47                     LD   B,A   
414F   3E FF                  LD   A,0FFH   
4151   CD 05 42               CALL   DELAYA   ;Wait A bit
4154                             ; See if Any Key is pressed
4154   0E 03                  LD   C,API_BEEP   ;beep
4156   D7                     RST   10H   ;mon3 API Call
4157   CD F4 41               CALL   KEYHIT   ;Look for key
415A   FE 12                  CP   12H   ;Check if GO key pressed
415C   20 E8                  JR   NZ,GA1   ;Not Pressed so loop
415E                             ; Restart Game
415E   CD A0 41               CALL   LCDSET   ;Set up LCD
4161   C3 00 40               JP   START   ;Restart
4164                             ; FUNCTIONS
4164                             ; ---------
4164                             ; Update DDRAM of the LCD.  This is the Display portion of the  LCD
4164                             ; First row starts at address 80H and can contain up to 40 bytes to A7H.  The second row
4164                             ; starts at address C0H and can contain up to 40 bytes to E7H.  Only 20 characters
4164                             ; are displayed at one time.  I will only use the first 20 bytes for each row
4164                             ; 
4164                             ; Inputs: HL.  HL is to point to the first location of data to send.
4164                UPDLCD:      
4164   01 04 80               LD   BC,LCDRW1 | LCD_IR   ;Move Cursor to First Row
4167   CD 6D 41               CALL   UPDROW   ;Update First Row
416A   01 04 C0               LD   BC,LCDRW2 | LCD_IR   ;Move Cursor to Second Row
416D                UPDROW:      
416D   CD 7D 41               CALL   CHKBSY   ;Check for LCD Busy
4170   ED 41                  OUT   (C),B   ;Send to Instruction Register (IR)
4172                             ; Send multiple characters using HL and OUTI
4172   01 84 14               LD   BC,1400H | LCD_DR   ;B=14 (20 Characters), C=84 (port number)
4175                UD1:         
4175   CD 7D 41               CALL   CHKBSY   ;Check for LCD Busy
4178   ED A3                  OUTI      ;Send (HL) to port C, Decrement B, Increment HL
417A   20 F9                  JR   NZ,UD1   ;OUTI sets zero if B=0;
417C   C9                     RET      
417D                             ; Check if the LCD is in the BUSY mode, and wait until it is not BUSY.  This
417D                             ; is important to check every time a command is sent to the LCD otherwise if
417D                             ; the LDC is busy the command sent will not register.
417D                CHKBSY:      
417D   DB 04                  IN   A,(LCD_IR)   ;Read Status bit from LCD
417F   07                     RLCA      ;Put Bit 7 (Status) in Carry Flag
4180   38 FB                  JR   C,CHKBSY   ;Do again if still busy
4182   C9                     RET      
4183                             ; Shift the Screen one position to the left, then add a space on the end.
4183                             ; Adding a space to both rows will make it easier to add the next upper or
4183                             ; lower block
4183                SCRNSH:      
4183   DD 21 00 30            LD   IX,SCRNR1   ;Set IX to First Row
4187   CD 8E 41               CALL   SHIFTY   
418A   DD 21 14 30            LD   IX,SCRNR2   ;Set IX to Second Row
418E                SHIFTY:      
418E   06 13                  LD   B,13H   ;Twenty Characters
4190                SH1:         
4190   DD 7E 01               LD   A,(IX+1)   ;Grab Screen+1
4193   DD 77 00               LD   (IX+0),A   ;Store it in Screen
4196   DD 23                  INC   IX   ;Move to next Screen pos
4198   10 F6                  DJNZ   SH1   ;Repeat 20 times
419A   3E 20                  LD   A,CH_SPAC   ;Space Character
419C   DD 77 00               LD   (IX+0),A   ;Store in Last spot
419F   C9                     RET      
41A0                             ; Initialize the LDC and disable JMON LCD if needed
41A0                LCDSET:      
41A0                             ; Check to see if JMON is used, if so, disable LDC updates and keep
41A0                             ; Monitor variables on Reset
41A0                             ; General LCD set up
41A0   CD 7D 41               CALL   CHKBSY   ;Check for LCD Busy
41A3   3E 01                  LD   A,01H   ;Display Clear
41A5   D3 04                  OUT   (LCD_IR),A   ;Send to Instruction Register (IR)
41A7   CD 7D 41               CALL   CHKBSY   ;Check for LCD Busy
41AA   3E 06                  LD   A,06H   ;Increment Cursor from Left to Right
41AC   D3 04                  OUT   (LCD_IR),A   ;Send to Instruction Register (IR)
41AE   CD 7D 41               CALL   CHKBSY   ;Check for LCD Busy
41B1   3E 0C                  LD   A,0CH   ;Turn Display ON
41B3   D3 04                  OUT   (LCD_IR),A   ;Send to Instruction Register (IR)
41B5   CD 7D 41               CALL   CHKBSY   ;Check for LCD Busy
41B8                             ; Initialise Terrain Lenght and Pos
41B8                             ; Initialise Terrain Length and Pos
41B8   21 29 30               LD   HL,TERPOS   
41BB   11 2A 30               LD   DE,TERPOS+1   
41BE   AF                     XOR   A   
41BF   77                     LD   (HL),A   
41C0   01 05 00               LD   BC,05H   
41C3   ED B0                  LDIR      
41C5   3E 08                  LD   A,08H   ;Initial Length of 8 spaces to start with
41C7   32 28 30               LD   (TERLEN),A   
41CA   3E 70                  LD   A,70H   ;Initial Delay Speed
41CC   32 2E 30               LD   (DELSPD),A   
41CF   C9                     RET      
41D0                             ; Reset Screen and Variables
41D0                RESET:       
41D0                             ; Fill Screen with blanks (Spaces)
41D0   21 00 30               LD   HL,SCREEN   ;Screen Address
41D3   11 01 30               LD   DE,SCREEN+1   
41D6   3E 20                  LD   A,CH_SPAC   ;Space
41D8   77                     LD   (HL),A   ;Store Space for
41D9   01 27 00               LD   BC,0027H   ;40 Bytes
41DC   ED B0                  LDIR      
41DE   C9                     RET      
41DF                             ; Load the Character Generaction RAM with custom characters
41DF                CUSTCH:      
41DF                             ; Tell the LCD that next data will be to CGRAM
41DF   CD 7D 41               CALL   CHKBSY   ;Check for LCD Busy
41E2   3E 40                  LD   A,40H   ;CGRAM entry
41E4   D3 04                  OUT   (LCD_IR),A   ;Send to Instruction Register (IR)
41E6                             ; Save multiple characters to CGRAM using lookup table and OUTI
41E6   01 84 38               LD   BC,3800H | LCD_DR   ;B=38/8 (characters), C=84 (port number)
41E9   21 26 42               LD   HL,CHRTBL   ;LCD table lookup
41EC                CU1:         
41EC   CD 7D 41               CALL   CHKBSY   ;Check for LCD Busy
41EF   ED A3                  OUTI      ;Send (HL) to port C, Decrement B, Increment HL
41F1   20 F9                  JR   NZ,CU1   ;OUTI sets zero if B=0;
41F3   C9                     RET      
41F4                             ; Keyboard Check. If no key pressed, return FFH else A is key pressed
41F4                KEYHIT:      
41F4   DB 03                  IN   A,(03)   ;Check if key is pressed
41F6   CB 77                  BIT   6,A   
41F8   28 03                  JR   Z,KE1   ;Jump if Key pressed
41FA   3E FF                  LD   A,0FFH   ;Set Key to FF
41FC   C9                     RET      
41FD                KE1:         
41FD   DB 00                  IN   A,(00)   ;Get actual key
41FF   E6 1F                  AND   1FH   ;Mask upper bits
4201   C9                     RET      
4202                             ; Delay routine to slow down LDC updates.  Uses DELSPD for its speed.
4202                             ; DELSPD will get smaller as game gets longer
4202                DELAY:       
4202                             ; Small Delay to handle GO press resetting
4202   3A 2E 30               LD   A,(DELSPD)   
4205                DELAYA:      
4205   57                     LD   D,A   
4206   1E 00                  LD   E,00H   
4208                DE1:         
4208   1B                     DEC   DE   
4209   7A                     LD   A,D   
420A   B3                     OR   E   
420B   20 FB                  JR   NZ,DE1   
420D   C9                     RET      
420E                             ; Convert HL to ASCII Character.  This smart routine converts each nibble of HL to
420E                             ; its ASCII hex value and outputs it directly to the LCD.  LCD must be ready to
420E                             ; receive DRRAM data
420E                DE2ASCII:      
420E   7D                     LD   A,L   ;Convert L
420F   CD 13 42               CALL   HL1   
4212   7C                     LD   A,H   ;Convert H
4213                HL1:         
4213   F5                     PUSH   AF   ;Save A for lower nibble
4214   0F                     RRCA      ;Shift high nibble across
4215   0F                     RRCA      
4216   0F                     RRCA      
4217   0F                     RRCA      
4218   CD 1C 42               CALL   HL2   ;Nibble Converter
421B   F1                     POP   AF   ;Lower Nibble
421C                HL2:         
421C   E6 0F                  AND   0FH   ;Mask out high nibble
421E   C6 30                  ADD   A,30H   ;30H is 0 ASCII, A is between 0-9
4220   D3 84                  OUT   (LCD_DR),A   ;Push it straight to LCD
4222   CD 7D 41               CALL   CHKBSY   ; 
4225   C9                     RET      ;Return for D or Exit
4226                CHRTBL:      ; CGRAM Characters
4226   0C 0C 00 0E 1C 0C 1A 13 DB   0CH,0CH,00H,0EH,1CH,0CH,1AH,13H   ;Run Position 1
422E   0C 0C 00 0C 0C 0C 0C 0E DB   0CH,0CH,00H,0CH,0CH,0CH,0CH,0EH   ;Run Position 2
4236   0C 0C 00 1E 0D 1F 10 00 DB   0CH,0CH,00H,1EH,0DH,1FH,10H,00H   ;Jump Lower
423E   1E 0D 1F 10 00 00 00 00 DB   1EH,0DH,1FH,10H,00H,00H,00H,00H   ;Jump Mid
4246   03 03 03 03 03 03 03 03 DB   03H,03H,03H,03H,03H,03H,03H,03H   ;Ground Right
424E   1F 1F 1F 1F 1F 1F 1F 1F DB   1FH,1FH,1FH,1FH,1FH,1FH,1FH,1FH   ;Ground
4256   18 18 18 18 18 18 18 18 DB   18H,18H,18H,18H,18H,18H,18H,18H   ;Ground Left
425E                TITTBL:      ; Title Table, Text for bottom row
425E   20 20 20 20 20 3C 50 72 65 73 73 20 47 4F 3E 20 20 20 20 20 DB   "     <Press GO>     "   
4272                             ;            DB     " Game by Ready? Z80 "
4272                             ; Title Data for Man movement, 2 Bytes (Position and Character)
4272   14 00 15 01 16 00 17 02 18 03 05 01 DB   14H,00H,15H,01H,16H,00H,17H,02H,18H,03H,05H,01H   
427E   06 00 07 01 08 00 09 01 DB   06H,00H,07H,01H,08H,00H,09H,01H   
4286   0A 00 0B 01 0C 00 0D 01 DB   0AH,00H,0BH,01H,0CH,00H,0DH,01H   
428E   0E 00 23 03 24 02 25 01 26 00 27 01 DB   0EH,00H,23H,03H,24H,02H,25H,01H,26H,00H,27H,01H   


LCD_IR:             0004 DEFINED AT LINE 29
                    > USED AT LINE 250
                    > USED AT LINE 260
                    > USED AT LINE 319
                    > USED AT LINE 343
                    > USED AT LINE 345
                    > USED AT LINE 362
                    > USED AT LINE 392
                    > USED AT LINE 395
                    > USED AT LINE 398
                    > USED AT LINE 431
LCD_DR:             0084 DEFINED AT LINE 30
                    > USED AT LINE 263
                    > USED AT LINE 351
                    > USED AT LINE 434
                    > USED AT LINE 487
LCDRW1:             8000 DEFINED AT LINE 31
                    > USED AT LINE 343
LCDRW2:             C000 DEFINED AT LINE 32
                    > USED AT LINE 345
LCDDIS:             008F DEFINED AT LINE 33
                    > USED AT LINE 249
LCDHEA:             0081 DEFINED AT LINE 34
                    > USED AT LINE 259
SCREEN:             3000 DEFINED AT LINE 36
                    > USED AT LINE 37
                    > USED AT LINE 38
                    > USED AT LINE 39
                    > USED AT LINE 40
                    > USED AT LINE 88
                    > USED AT LINE 113
                    > USED AT LINE 196
                    > USED AT LINE 244
                    > USED AT LINE 418
                    > USED AT LINE 419
SCRNR1:             3000 DEFINED AT LINE 37
                    > USED AT LINE 371
SCRNR2:             3014 DEFINED AT LINE 38
                    > USED AT LINE 82
                    > USED AT LINE 373
MANRW1:             3001 DEFINED AT LINE 39
                    > USED AT LINE 228
MANRW2:             3015 DEFINED AT LINE 40
                    > USED AT LINE 222
                    > USED AT LINE 302
TERLEN:             3028 DEFINED AT LINE 42
                    > USED AT LINE 155
                    > USED AT LINE 159
                    > USED AT LINE 175
                    > USED AT LINE 409
TERPOS:             3029 DEFINED AT LINE 43
                    > USED AT LINE 197
                    > USED AT LINE 402
                    > USED AT LINE 403
TERTYP:             302A DEFINED AT LINE 44
                    > USED AT LINE 153
MANSTA:             302B DEFINED AT LINE 45
                    > USED AT LINE 223
                    > USED AT LINE 308
DISH2D:             302C DEFINED AT LINE 46
                    > USED AT LINE 208
                    > USED AT LINE 251
DELSPD:             302E DEFINED AT LINE 47
                    > USED AT LINE 146
                    > USED AT LINE 287
                    > USED AT LINE 313
                    > USED AT LINE 411
                    > USED AT LINE 458
API_BEEP:           0003 DEFINED AT LINE 49
                    > USED AT LINE 324
THIS:               003E DEFINED AT LINE 51
                    > USED AT LINE 276
CODE:               3018 DEFINED AT LINE 52
OF:                 3A07 DEFINED AT LINE 53
                    > USED AT LINE 277
SECRET:             0000 DEFINED AT LINE 54
                    > USED AT LINE 276
IS:                 04FE DEFINED AT LINE 55
BIT:                28B7 DEFINED AT LINE 56
                    > USED AT LINE 277
TRICKY:             0828 DEFINED AT LINE 57
CH_SPAC:            0020 DEFINED AT LINE 60
                    > USED AT LINE 131
                    > USED AT LINE 192
                    > USED AT LINE 233
                    > USED AT LINE 267
                    > USED AT LINE 303
                    > USED AT LINE 381
                    > USED AT LINE 420
CH_RUN1:            0000 DEFINED AT LINE 61
CH_RUN2:            0001 DEFINED AT LINE 62
CH_JMP1:            0002 DEFINED AT LINE 63
CH_JMP2:            0003 DEFINED AT LINE 64
CH_HEAD:            002E DEFINED AT LINE 65
                    > USED AT LINE 103
                    > USED AT LINE 262
CH_GRNR:            0004 DEFINED AT LINE 66
                    > USED AT LINE 189
CH_GRND:            0005 DEFINED AT LINE 67
                    > USED AT LINE 164
CH_GRNL:            0006 DEFINED AT LINE 68
                    > USED AT LINE 170
START:              4000 DEFINED AT LINE 71
                    > USED AT LINE 331
TITLE:              400A DEFINED AT LINE 78
                    > USED AT LINE 141
TI1:                401A DEFINED AT LINE 87
                    > USED AT LINE 138
TI2:                402F DEFINED AT LINE 106
                    > USED AT LINE 99
SKIP:               404F DEFINED AT LINE 129
                    > USED AT LINE 126
GOHIT:              405C DEFINED AT LINE 143
                    > USED AT LINE 124
GAME:               4064 DEFINED AT LINE 149
                    > USED AT LINE 309
ENDTER:             407F DEFINED AT LINE 166
                    > USED AT LINE 160
NEWTER:             4087 DEFINED AT LINE 172
                    > USED AT LINE 157
SETSPC:             40A1 DEFINED AT LINE 191
                    > USED AT LINE 163
                    > USED AT LINE 169
                    > USED AT LINE 188
DRAWTE:             40A3 DEFINED AT LINE 193
                    > USED AT LINE 165
                    > USED AT LINE 171
                    > USED AT LINE 190
UPDMAN:             40C0 DEFINED AT LINE 220
                    > USED AT LINE 213
UP1:                40CD DEFINED AT LINE 229
                    > USED AT LINE 227
UP2:                40FD DEFINED AT LINE 264
                    > USED AT LINE 258
CHEAT:              4108 DEFINED AT LINE 274
                    > USED AT LINE 75
                    > USED AT LINE 128
UP3:                4114 DEFINED AT LINE 279
UP4:                411C DEFINED AT LINE 285
UP5:                4124 DEFINED AT LINE 292
                    > USED AT LINE 273
                    > USED AT LINE 284
UP6:                4129 DEFINED AT LINE 296
                    > USED AT LINE 294
UP7:                4139 DEFINED AT LINE 307
                    > USED AT LINE 291
                    > USED AT LINE 300
                    > USED AT LINE 305
GAMEOV:             413F DEFINED AT LINE 311
                    > USED AT LINE 234
GA1:                4146 DEFINED AT LINE 315
                    > USED AT LINE 328
UPDLCD:             4164 DEFINED AT LINE 342
                    > USED AT LINE 114
                    > USED AT LINE 245
UPDROW:             416D DEFINED AT LINE 346
                    > USED AT LINE 344
UD1:                4175 DEFINED AT LINE 352
                    > USED AT LINE 355
CHKBSY:             417D DEFINED AT LINE 361
                    > USED AT LINE 248
                    > USED AT LINE 261
                    > USED AT LINE 316
                    > USED AT LINE 347
                    > USED AT LINE 353
                    > USED AT LINE 364
                    > USED AT LINE 390
                    > USED AT LINE 393
                    > USED AT LINE 396
                    > USED AT LINE 399
                    > USED AT LINE 429
                    > USED AT LINE 437
                    > USED AT LINE 488
SCRNSH:             4183 DEFINED AT LINE 370
                    > USED AT LINE 151
SHIFTY:             418E DEFINED AT LINE 374
                    > USED AT LINE 372
SH1:                4190 DEFINED AT LINE 376
                    > USED AT LINE 380
LCDSET:             41A0 DEFINED AT LINE 386
                    > USED AT LINE 72
                    > USED AT LINE 330
RESET:              41D0 DEFINED AT LINE 416
                    > USED AT LINE 79
                    > USED AT LINE 144
CUSTCH:             41DF DEFINED AT LINE 427
                    > USED AT LINE 73
CU1:                41EC DEFINED AT LINE 436
                    > USED AT LINE 439
KEYHIT:             41F4 DEFINED AT LINE 443
                    > USED AT LINE 122
                    > USED AT LINE 281
                    > USED AT LINE 326
KE1:                41FD DEFINED AT LINE 449
                    > USED AT LINE 446
DELAY:              4202 DEFINED AT LINE 456
                    > USED AT LINE 115
                    > USED AT LINE 265
DELAYA:             4205 DEFINED AT LINE 459
                    > USED AT LINE 322
DE1:                4208 DEFINED AT LINE 462
                    > USED AT LINE 466
DE2ASCII:           420E DEFINED AT LINE 472
                    > USED AT LINE 252
HL1:                4213 DEFINED AT LINE 476
                    > USED AT LINE 474
HL2:                421C DEFINED AT LINE 484
                    > USED AT LINE 482
CHRTBL:             4226 DEFINED AT LINE 491
                    > USED AT LINE 435
TITTBL:             425E DEFINED AT LINE 500
                    > USED AT LINE 81
